@import "modern-normalize";
@import "open-props/postcss/style";
@import "open-props/sizes";

@property --scroll {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --scroll-delayed {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --scroll-direction {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@keyframes setScrollProps {
  to {
    --scroll: 1000;
    --scroll-delayed: 1000;
  }
}

:root {
  animation: setScrollProps linear both;
  animation-timeline: scroll(root);
  --header-effect-duration: 0.8s;
}

body {
  min-height: 100vh;
  word-break: break-word;
  display: grid;
  grid-template-rows: auto 1fr auto;

  /* the transition of the header should last a 
   * bit less than this transition otherwise, for 
   * extremely small scroll movements, the header 
   * won't be fully revealed or hidden (that's 
   * the reason for a + .1 sec. here)
   */
  transition: --scroll-delayed calc(var(--header-effect-duration) + 0.1s);
  --scroll-velocity: calc(var(--scroll) - var(--scroll-delayed));
  --scroll-speed: max(var(--scroll-velocity), -1 * var(--scroll-velocity));
  --scroll-direction: calc(var(--scroll-velocity) / var(--scroll-speed));

  & > header {
    will-change: top;
    transition: top var(--header-effect-duration) 0s;
    background: white;

    position: sticky;
    z-index: 1;
    top: var(--translate, 0);
    border-bottom: 1px dashed var(--gray-5);

    @container style(--scroll-direction: 0) {
      transition-delay: calc(infinity * 1s);
    }
    @container style(not (--scroll-direction: 0)) {
      --translate: calc((var(--scroll-direction) + 1) * -50%);
    }

    & > nav {
      display: flex;
      flex-wrap: wrap;
      column-gap: var(--size-fluid-4);
      align-items: center;
      padding: 0 var(--size-fluid-4);
      width: 100%;
      max-width: var(--size-lg);
      margin: 0 auto;
      min-height: var(--size-fluid-5);

      & a {
        color: inherit;
      }

      & > h1 {
        font-size: var(--font-size-3);
      }

      & > ul {
        display: flex;
        gap: var(--size-fluid-2);
        align-items: center;
        list-style: none;
        padding: 0;
        margin-left: auto;

        & > li {
          padding: 0;
        }
      }
    }
  }

  & > main {
    width: 100%;
    max-width: var(--size-lg);
    margin: 0 auto;
    padding: var(--size-fluid-4);

    & > * {
      margin-bottom: var(--size-fluid-5);
    }
    & > *:first-child {
      margin-top: 0;
    }
    & > *:last-child {
      margin-bottom: 0;
    }
  }

  & > footer {
    width: 100%;
    max-width: var(--size-lg);
    margin: 0 auto;
    padding: var(--size-fluid-4);
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--size-fluid-2);
    justify-content: space-between;

    & > p {
      margin: var(--size-fluid-1) 0;
      & > code {
        font-size: inherit;
        user-select: all;
      }
    }
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
  clip-path: inset(50%);
}
