@property --scroll {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --scroll-delayed {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --scroll-direction {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@keyframes setScrollProps {
  to {
    --scroll: 1000;
    --scroll-delayed: 1000;
  }
}

:root {
  --container-width: 960px;
  --form-width: 360px;
  --space-sm: 0.5rem;
  --space: 1rem;
  --space-lg: 2rem;
  --container: 960px;
  --color-background: white;
  --color-border: lightgray;
  --color-error: red;

  animation: setScrollProps linear both;
  animation-timeline: scroll(root);
  --header-effect-duration: 0.8s;
}

body {
  word-break: break-word;

  /* the transition of the header should last a 
   * bit less than this transition otherwise, for 
   * extremely small scroll movements, the header 
   * won't be fully revealed or hidden (that's 
   * the reason for a + .1 sec. here)
   */
  transition: --scroll-delayed calc(var(--header-effect-duration) + 0.1s);
  --scroll-velocity: calc(var(--scroll) - var(--scroll-delayed));
  --scroll-speed: max(var(--scroll-velocity), -1 * var(--scroll-velocity));
  --scroll-direction: calc(var(--scroll-velocity) / var(--scroll-speed));

  & > header {
    border-bottom: 1px dashed var(--color-border);
    background: var(--color-background);

    will-change: top;
    transition: top var(--header-effect-duration) 0s;

    position: sticky;
    z-index: 1;
    top: var(--translate, 0);

    @container style(--scroll-direction: 0) {
      transition-delay: calc(infinity * 1s);
    }
    @container style(not (--scroll-direction: 0)) {
      --translate: calc((var(--scroll-direction) + 1) * -50%);
    }

    & a {
      text-decoration: none;
      color: inherit;
      display: inline-block;
    }

    & > nav {
      display: flex;
      flex-wrap: wrap;
      gap-column: var(--space);
      align-items: center;
      padding: calc(var(--space-sm) / 2) var(--space);
      max-width: var(--container-width);
      margin: 0 auto;

      @media screen and (min-width: 600px) {
        padding: calc(var(--space-sm) / 2) var(--space-lg);
      }

      & > h1 {
        font-size: larger;

        & a:hover {
          text-decoration: underline;
        }
      }

      & > ul {
        display: flex;
        gap: var(--space);
        align-items: center;
        list-style: none;
        padding: 0;
        margin-left: auto;
      }

      & > li a {
        padding: calc(var(--space-sm) / 2) var(--space-sm);
        font-size: 1rem;
        border-radius: 4px;
        border: 1px solid var(--color-border);

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }

  & > main {
    width: 100vw;
    max-width: var(--container-width);
    margin: 0 auto;
    padding: var(--space);

    @media screen and (min-width: 600px) {
      padding: var(--space-lg);
    }

    & > * {
      margin-bottom: var(--space-lg);
    }
    & > *:first-child {
      margin-top: 0;
    }
    & > *:last-child {
      margin-bottom: 0;
    }
  }
}

form {
  display: grid;
  gap: var(--space-sm);
  max-width: var(--form-width);

  & [id$="-error"] {
    color: var(--color-error);
  }

  & > div:has(input[type="text"]),
  & > div:has(select) {
    display: grid;
    gap: var(--space-sm);
  }

  & label {
    display: block;
  }

  & input[type="text"] {
    display: block;
    padding: calc(var(--space-sm) / 2) var(--space-sm);
    width: 100%;
    border: 1px solid var(--color-border);
    border-radius: 4px;
  }

  & select,
  & input {
    font-size: medium;
    border: 1px solid var(--color-border);
    border: 1px solid var(--color-border);
    border-radius: 4px;
  }
}

button {
  background: white;
  font-size: medium;
  border-radius: 4px;
  border: 1px solid var(--color-border);
  cursor: pointer;
  padding: calc(var(--space-sm) / 2) var(--space-sm);

  &:hover {
    background: #f5f5f5;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
  clip-path: inset(50%);
}

.cards {
  display: flex;
  flex-direction: column;
  gap: var(--space);

  & > * {
    border: 1px solid var(--color-border);
    padding: var(--space);

    display: flex;
    gap: var(--space);
    cursor: pointer;

    & > picture > img {
      width: 3rem;
      height: 3rem;
      object-fit: cover;
      border-radius: 50%;
      border: 1px solid var(--color-border);
    }

    & > div {
      & > h2 {
        margin-top: 0;
        margin-bottom: var(--space-sm);
        font-size: large;

        & > span,
        & > small,
        & > time {
          display: inline-block;
          margin-right: calc(var(--space-sm) / 2);
        }

        & small,
        & time {
          font-size: small;
          font-weight: normal;
        }
      }

      & > p {
        margin: var(--space-sm) 0;
      }
    }
  }
}
